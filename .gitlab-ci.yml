# Keep mode_modules between jobs (results in lower build times)
cache: &global_cache
  untracked: true
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull-push

stages:
  - install
  - Generate Swagger client
  - verify
  - build
  - deploy

Install dependencies:
  stage: install
  script: npm i
  tags:
    - GameBase
    - docker
    - angular

Generate swagger client:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: Generate Swagger client
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script: npm run openapi
  artifacts:
    paths:
      - src/app/rest-client/
  tags:
    - GameBase
    - docker
    - angular

Verify lint:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: verify
  image: trion/ng-cli-karma
  script: npm run lint
  tags:
    - GameBase
    - docker

Verify Karma test:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: verify
  image: trion/ng-cli-karma
  script: ng test --code-coverage --progress false --watch false
  artifacts:
    paths:
      - coverage/
  tags:
    - GameBase
    - docker

Verify E2E test:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: verify
  image: trion/ng-cli-e2e:9.1.7
  script: npm run e2e
  tags:
    - GameBase
    - docker

Build release:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: build
  script: npm run build-live
  only:
    - master
  artifacts:
    paths:
      - dist/*
  tags:
    - GameBase
    - docker
    - angular

SoarQube Scanner:
  # required after karma tests for test coverage report...
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: build
  image: trion/ng-cli-e2e:9.1.7
  script: npm run sonarqube -- -Dsonar.login=$SONARQUBE_PROJECT_TOKEN
  tags:
    - GameBase
    - docker

Build dev:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  stage: build
  script: npm run build-dev
  except:
    - master
  artifacts:
    paths:
      - dist/*
  tags:
    - GameBase
    - docker
    - angular

publish docker image dev:
  stage: deploy
  image: docker
  cache: {}  # no cache required for deployment
  before_script:
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
  script:
    - docker build --pull -t "gamebaseproject/frontend:$CI_COMMIT_SHA" .
    - docker push "gamebaseproject/frontend:$CI_COMMIT_SHA"
  except:
    - master
    - tags
  tags:
    - GameBase
    - docker

publish docker image tag:
  stage: deploy
  image: docker
  cache: {}  # no cache required for deployment
  before_script:
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD"
  script:
    - docker build --pull -t "gamebaseproject/frontend:$CI_COMMIT_REF_NAME" -t "gamebaseproject/frontend:latest" .
    - docker push "gamebaseproject/frontend:$CI_COMMIT_REF_NAME"
    - docker push "gamebaseproject/frontend:latest"
  only:
    - tags
  tags:
    - GameBase
    - docker

Deploy release:
  stage: deploy
  cache: {}  # no cache required for deployment
  script:
    - rm -r /opt/gamebase/frontend/live/*
    - cp -r dist/GameBase-Frontend/* /opt/gamebase/frontend/live/
  only:
    - master
  tags:
    - GameBase
    - shell

Deploy dev:
  stage: deploy
  cache: {}  # no cache required for deployment
  script:
    - rm -r /opt/gamebase/frontend/dev/*
    - cp -r dist/GameBase-Frontend/* /opt/gamebase/frontend/dev/
  except:
    - master
  tags:
    - GameBase
    - shell

pages:
  stage: deploy
  cache:
    # inherit all global cache settings
    <<: *global_cache
    key: pages
    paths:
      - public
    policy: pull-push
  dependencies:
    - Verify Karma test
  script:
    - mkdir -p public/dev/
    - cp -a coverage/Frontend/* public/dev/
  except:
    - master
  artifacts:
    name: "$CI_PIPELINE_ID"
    paths:
      - public
  tags:
    - GameBase
    - docker
